name: Build, Test, and Deploy

on:
  push:
    branches:
      - '**'        
  pull_request:    
    branches:
      - '**'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Set image tag
        id: vars
        run: |
          TAG=$(echo "${{ github.ref_name }}" | tr '[:upper:]' '[:lower:]' | tr -c 'a-z0-9_.-' '-')
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/my-app:${{ steps.vars.outputs.tag }} .

      - name: Run Container for Health Check
        run: |
          docker run -d --rm -p 3000:3000 --name test-container ${{ secrets.DOCKER_USERNAME }}/my-app:${{ steps.vars.outputs.tag }}
          sleep 20

      - name: Health Check
        run: |
          STATUS=$(curl -o /dev/null -s -w "%{http_code}" http://localhost:3000)
          if [ "$STATUS" -ne 200 ]; then
            echo "Health check failed (HTTP $STATUS)" >&2
            docker logs test-container
            exit 1
          fi
          echo "Health check passed (HTTP $STATUS)"

      - name: Stop Test Container
        run: docker stop test-container || true

  deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build & Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/my-app:latest

      - name: SSH to server and deploy
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            docker pull ${{ secrets.DOCKER_USERNAME }}/my-app:latest
            docker stop WAD2 || true
            docker rm WAD2 || true
            docker run -d --name WAD2 -p 5005:3000 ${{ secrets.DOCKER_USERNAME }}/my-app:latest
